# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class ConfigurableDataSourceNames(str, enum.Enum):
    """
    An enumeration.
    """

    S_3 = "S3"
    AZURE_STORAGE_BLOB = "AZURE_STORAGE_BLOB"
    GCS = "GCS"
    GOOGLE_DRIVE = "GOOGLE_DRIVE"
    MICROSOFT_ONEDRIVE = "MICROSOFT_ONEDRIVE"
    MICROSOFT_SHAREPOINT = "MICROSOFT_SHAREPOINT"

    def visit(
        self,
        s_3: typing.Callable[[], T_Result],
        azure_storage_blob: typing.Callable[[], T_Result],
        gcs: typing.Callable[[], T_Result],
        google_drive: typing.Callable[[], T_Result],
        microsoft_onedrive: typing.Callable[[], T_Result],
        microsoft_sharepoint: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is ConfigurableDataSourceNames.S_3:
            return s_3()
        if self is ConfigurableDataSourceNames.AZURE_STORAGE_BLOB:
            return azure_storage_blob()
        if self is ConfigurableDataSourceNames.GCS:
            return gcs()
        if self is ConfigurableDataSourceNames.GOOGLE_DRIVE:
            return google_drive()
        if self is ConfigurableDataSourceNames.MICROSOFT_ONEDRIVE:
            return microsoft_onedrive()
        if self is ConfigurableDataSourceNames.MICROSOFT_SHAREPOINT:
            return microsoft_sharepoint()
